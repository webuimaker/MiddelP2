var stripe = Stripe(STRIPE_KEY);
var selectedPlan = "";
var planAmount = 0;
var categories = [];
var referralSource = document.referrer;
var upgradeUserPlan = "";
var formType;
var isUpgrade;
var isUpdate;
var isMobile = (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));

// IDs of plans (not upsell)
var annualProPlanId = ANNUAL_PRO_PLAN
var monthlyProPlanId = MONTHLY_PRO_PLAN
var monthlyEnterprisePlanId = MONTHLY_ENTERPRISE_PLAN

// IDs of plans (for upsell)
var upsellAnnualProPlanId = ANNUAL_PRO_PLAN
var upsellMonthlyProPlanId = monthlyProPlanId;

var defaultUrl = DEFAULT_URL;

// Configures the trends that are currently selected
var selectedTrends = ['Products', 'Companies', 'Everything'];

var isUpdatingCard = true;
var promo_cache = {}

var planMap = {
    'pro': {
        'billedPriceAnnual': '$278/Yr',
        'billedTodayAnnual': '$278',
        'billedTodayAnnualPH': '$208.5',
        'billedPriceMonthly': '$29/Mo',
        'billedTodayMonthly': '$29',
        'billedTodayMonthlyPH': '$14.50',
        'amount' : 29,
        'savingsAnnual': '$70',
        'annualPlanId': annualProPlanId,
        'monthlyPlanId': monthlyProPlanId,
    },
    'enterprise': {
        'billedPriceMonthly': '$479/Mo',
        'billedTodayMonthly': '$479',
        'billedTodayMonthlyPH': '$239.50',
        'amount' : 479,
        'monthlyPlanId': monthlyEnterprisePlanId
    },
    'pro_upsell': {
        'billedPriceAnnual': '$278/Yr',
        'billedTodayAnnual': '$278',
        'billedPriceMonthly': '$29/Mo',
        'billedTodayMonthly': '$29',
        'savingsAnnual': '$70',
        'annualPlanId': upsellAnnualProPlanId,
        'monthlyPlanId': upsellMonthlyProPlanId
    },
    'enterprise_upsell': {
        'billedPriceAnnual': '$885/Yr',
        'billedTodayAnnual': '$885',
        'billedPriceMonthly': '$79/Mo',
        'billedTodayMonthly': '$79',
        'savingsAnnual': '$63',
        'annualPlanId': UPSELL_ENTERPRISE_ANNUALLY,
        'monthlyPlanId': UPSELL_ENTERPRISE_MONTHLY,
    }
};

// Get the current route so we can determine if we want to fetch data
var currentRoute = getCurrentRoute();

// Feature detects Navigation Timing API support.
if (window.performance) {
    // Gets the number of milliseconds since page load
    // (and rounds the result since the value must be an integer).
    var timeSincePageLoad = Math.round(performance.now());

    // Sends the timing event to Google Analytics.
    /*
    gtag('event', 'timing_complete', {
        'name': 'load',
        'value': timeSincePageLoad,
        'event_category': 'JS Dependencies'
    });
    */
}

$(document).ready(function () {
    if (isMobile) {
      $('body').addClass('is-mobile');
    } else {
      $('body').addClass('is-not-mobile');
    }

    // If we are not on the upsell route, fetch data on the companies
    if (currentRoute.indexOf('upgrade') < 0 && currentRoute.indexOf('reports') < 0 && currentRoute.indexOf('update') < 0){
        fetchData("companies");
    } else if (currentRoute.indexOf('reports') >= 0) {
        $(".curveFooterSection").css('z-index', '1');
    }
    // We only want to init stripe if they are on the index or upsell page
    if (routeIsAtIndex() || currentRoute.indexOf('upgrade') >= 0 || currentRoute.indexOf('update') >= 0) {
        initStripe();
    }

    var defaultInput = $('#tailoredReportKeyword');
    if (defaultInput) defaultInput.select();

    // Query params
    var query = getUrlParameter('ref');
    var upgrade = getUrlParameter('upgrade');
    isUpdate = currentRoute.indexOf('update') >= 0;
    var customerId = getUrlParameter('customerId');

    // We need to have certain query params in order to redirect to the upgrade page
    if (currentRoute.indexOf('upgrade') >= 0 && (!upgrade || !customerId || upgrade.length < 1 || customerId.length < 1)) {
        window.location.replace('https://meetglimpse.com');
    } else if (isUpdate && !customerId) {
        window.location.replace('https://meetglimpse.com');
    }

    isUpgrade = (upgrade === 'true' || isUpdate);
    if (isUpgrade && customerId != undefined) {
        $.ajax({
            url: API_URL + `/api/user/upgradeInfo/${customerId}`,
            type: "GET",
            success: function (success) {
                if (success.glimpseUser) {
                    glimpseUser = success.glimpseUser;
                    var paymentPlan = glimpseUser.paymentPlan;
                    initStripeUpgrade();
                    convertCheckoutModalToUpgrade(isUpdate);
                    $("#emailAddress").val(glimpseUser.email)
                    $("#fullname").val(glimpseUser.name)
                    if ((paymentPlan === "pro" || paymentPlan === "enterprise")) {
                        upgradeUserPlan = 'enterprise_upsell';
                        selectedPlan = UPSELL_ENTERPRISE_MONTHLY;
                        isUpdatingCard = false;
                        $("#billedprice").text(planMap.enterprise_upsell.billedPriceMonthly);
                        $("#billedtoday").text(planMap.enterprise_upsell.billedTodayMonthly);
                        // We want to hide the card number on the enterprise upgrade
                        $('#card-number').addClass('hide');
                        // Show the default payment configured
                        $('#payment-configured').removeClass('hide');
                        $('#payment-last-four').text(success.cardData.last4);

                        // Set card number ready to be updated
                        if (isUpdate) {
                            $("#billinginfo").hide();
                            $(".switch-group").hide();
                        }
                   }
                    else {
                        upgradeUserPlan = 'pro_upsell';
                        selectedPlan = upsellMonthlyProPlanId;
                        $("#billedprice").text("$29/Mo");
                        $("#billedtoday").text("$29");
                    }
                }
            },
            error: function (error) {
                console.error(error.responseText);
                // Only want to redirect the user to the home page if they are on the upsell page
                if (currentRoute.indexOf('upgrade') >= 0) {
                    window.location.replace('https://meetglimpse.com');
                }
            }
        })
    }

    if (query == 'producthunt') {
        $('#promoheader').show();
        $('#topheader').css('margin-top', '50px');
    }

});

$(document).on('show.bs.modal', '.modal', function () {
    if ($("#checkout-form").hasClass("hide")) {
        $("#checkout-form").removeClass("hide").siblings("#thanks-note").addClass("hide");
    }
});

$(document).on('click', '.upgrade-modal-close', function () {
    convertUpgradeModalToCheckout();
});

// Switch toggling
var switchHandle = $('#switch-slider');
var switchSize = switchHandle.width();
var switchArea =  $('.slider');

// Only want to enable the switch on the pages that have a checkout
if (currentRoute.indexOf('upgrade') >= 0 || routeIsAtIndex()) {
    $('#switch-slider').draggable({
        axis: 'x',
        containment: 'parent',
        stop: function() {
            conditionMove();
        }
    });
}

switchArea.click(function() {
    conditionMoveSnap();
});

function conditionMove() {
    if (parseInt(switchHandle.css('left')) <= (switchSize / 2)) {
        switchHandle.animate({
            left: 0
        }, 100);
        $('#monthly-checkbox').prop('checked', false);
    }
    else {
        switchHandle.animate({
            left: switchSize + 'px'
        }, 100);
        $('#monthly-checkbox').prop('checked', true);
    }
    triggerPriceUpdate();
}

function conditionMoveSnap() {
    if (parseInt(switchHandle.css('left')) === switchSize) {
        switchHandle.animate({
            left: 0
        }, 100);
        $('#monthly-checkbox').prop('checked', false);
    }
    else {
        switchHandle.animate({
            left: switchSize + 'px'
        }, 100);
        $('#monthly-checkbox').prop('checked', true);
    }
    triggerPriceUpdate();
}

function triggerPriceUpdate () {
    var isChecked = $('#monthly-checkbox').prop('checked');
    if(isChecked) {
        $("#billedprice").fadeOut(function() {
            $(this).text(planMap[upgradeUserPlan].billedPriceAnnual)
          }).fadeIn();
        $("#billedtoday").fadeOut(function() {
            $(this).text(planMap[upgradeUserPlan].billedTodayAnnual)
          }).fadeIn();
        $("#savingstoday").text(planMap[upgradeUserPlan].savingsAnnual);
        $("#savingsgroup").css({ 'opacity': '1' });
        selectedPlan = planMap[upgradeUserPlan].annualPlanId;
    } else {
        $("#billedprice").fadeOut(function() {
            $(this).text(planMap[upgradeUserPlan].billedPriceMonthly)
          }).fadeIn();
        if (window.location.search == "?ref=producthunt") {
            if(selectedPlan === monthlyEnterprisePlanId) {
                $('#billedtoday').fadeOut(function() {
                    $(this).text(planMap[upgradeUserPlan].billedTodayMonthlyPH)
                }).fadeIn()
            } else {
                $('#billedtoday').fadeOut(function() {
                    $(this).text(planMap[upgradeUserPlan].billedTodayMonthlyPH)
                }).fadeIn()
            }
        } else {
            if(selectedPlan === monthlyEnterprisePlanId) {
                $('#billedtoday').fadeOut(function() {
                    $(this).text(planMap[upgradeUserPlan].billedTodayMonthly)
                }).fadeIn()
            } else {
                $("#billedtoday").fadeOut(function() {
                    $(this).text(planMap[upgradeUserPlan].billedTodayMonthly)
                }).fadeIn();
            }
        }
        $("#savingsgroup").css({ 'opacity': '0' });
        selectedPlan = planMap[upgradeUserPlan].monthlyPlanId;
    }
}

//Chart
$(document).on("click", "#selector .cat_selector a", function () {
    $(".cat_selector a").removeClass("active");
    $(this).addClass("active");
    category = $(this).attr("data-attribute")
    fetchData($(this).attr("data-attribute"));
    dataLayer.push({
        'event': 'productClick',
        'ecommerce': {
            'click': {
                'actionField' : {'list': 'Category Charts'},
                 'products' : [{
                   'name': category + '-button',
                   'id': category,
                 }],
            }
        }
    })
});

$(document).on("click", "#see-new", function () {
    dataLayer.push({
        'ecommerce': {
            'promoView': {
              'promotions': [                     // Array of promoFieldObjects.
               {
                 'id': 'see-new-trends',
                 'name': 'See new trends',
                 'position': 'middle'
               }]
            }
        }
    });
});

$(document).on("click", ".nondefault", function () {
    //gtag('event', 'non_default_category_selected');
});

$(document).on("click", ".btn-subscribe", function () {
    var query = getUrlParameter('ref');
    // Reset the checkbox
    $('#monthly-checkbox').prop('checked', false);
    switchHandle.css({
        left: 0
    });
    upgradeUserPlan = '';
    // If we are on the upsell route, we don't want to change the selected plan
    if (getCurrentRoute().indexOf('upgrade') < 0) {
        data_plan = $(this).attr("data-plan");
        selectedPlan = ""
        planAmount = 0
        if (data_plan) {
            plan = data_plan.split('-')
            planAmount = planMap[plan[0]].amount
            selectedPlan = planMap[plan[0]][plan[1]]
        }

    }
    if (selectedPlan === monthlyEnterprisePlanId) {
        upgradeUserPlan = 'enterprise';
        $('#billinginfo').removeClass('hide');
        triggerPriceUpdate();
    } else if (selectedPlan === monthlyProPlanId  || selectedPlan === annualProPlanId) {
        $('.switch-group').removeClass('hide');
        $('#billinginfo').removeClass('hide');
        upgradeUserPlan = 'pro';
        triggerPriceUpdate();
    } else {
        $('.switch-group').addClass('hide');
        $('#billinginfo').addClass('hide');
    }
    if ($("#modal-dialog").hasClass("hide")) {
        $("#modal-dialog").removeClass('hide');
    }

    dataLayer.push({
      'event': 'checkout',
      'ecommerce': {
        'checkout': {
          'actionField': {'step': 1, 'option': 'subscribe'},
          'products': [{
            'name': upgradeUserPlan,
            'id': selectedPlan,
            'quantity': 1
          }]
        }
      }
    })

    if (selectedPlan == "") {
        $(".for-payment").addClass("hide");
    } else if ($(".for-payment").hasClass("hide")) {
        $(".for-payment").removeClass("hide");
    }

    if (query != 'producthunt') {
        $("#promo-section").addClass("hide");
    }
});

$(document).on("click", "#checkout-form .cat_selector", function () {
    var selectedCategory = ($(this).find("a").attr("data-category"));

    if ($(this).hasClass("active")) {
        $(this).removeClass("active");
    } else {
        $(this).addClass("active");
    }

    if ($("#cat-label").hasClass("invalid-text")) {
        $("#cat-label").removeClass("invalid-text")
    }

    if (_.findIndex(categories, function (o) { return o == selectedCategory }) < 0) {
        categories.push(selectedCategory);
    } else {
        _.remove(categories, function (category) {
            return category == selectedCategory;
        });
    }

    dataLayer.push({
    'event': 'checkout',
    'ecommerce': {
      'checkout': {
        'actionField': {'step': 2, 'option': categories.toString()},
         'products': [{
		   'name': categories.toString(),
		   'id': categories.toString(),
           }]
      }
    }
  });
});

$(document).on("click", ".navigate", function () {
    var target = $(this).attr("data-target");
    var marginTop = 0;

    if (target == '#selector') {
        marginTop = 20;
    }

    $('html, body').animate({
        scrollTop: $(target).offset().top - marginTop
    }, 500);
    return false;
});

$(document).on("click", ".ctascrollbutton", function () {
    /*
    gtag('event', 'cta_scroll_down', {
        'event_category' : 'navigation',
    });
    */
});

$(document).on("click", "#backtotop", function () {
    /*
    gtag('event', 'cta_scroll_up', {
        'event_category' : 'navigation',
    });
    */
});

$(document).on("click", "#demoscroll", function () {
    /*
    gtag('event', 'demo_scroll_down', {
        'event_category' : 'navigation',
    });
    */
});

$(document).on("click", "#newsletterscroll", function () {
    /*
    gtag('event', 'newsletter_scroll_down', {
        'event_category' : 'navigation',
    });
    */
});

$(document).on("click", "#datascroll", function () {
    /*
    gtag('event', 'data_scroll_down', {
        'event_category' : 'navigation',
    });
    */
});

$(document).on("focus", ".form-control", function () {
    $(this).siblings("label").addClass("valid-text");
});

$(document).on("blur", ".form-control", function () {
    $(this).siblings("label").removeClass("valid-text");
});

//promo
$(document).on("click", ".vouchercode", function () {
    $("#promo").val("PHLAUNCH");
});

$(document).on('click', '#change-payment', function () {
    $('#card-number').removeClass('hide');
    $('#payment-configured').addClass('hide');
    isUpdatingCard = true;
});

function fetchData(params) {
    var dataObject = {
        "products": {
            "Oat Milk": {
                "pull_date": "2019-01-14",
                "search_volume": "93,600",
                "data": [6.26,6.26,6.87,6.93,6.93,6.23,6.47,7.43,7.09,7.27,6.71,6.29,6.63,7.52,8.21,9.1,9.18,9.87,9.02,10.06,10.25,9.95,10.22,8.67,8.35,8.13,7.78,7.94,8.74,7.4,7.38,6.61,5.83,7.25,7,7.49,9.04,8.91,9.68,9.92,8.32,7.51,7.43,7.75,8.1,8.85,8.82,8.64,8.1,7.62,8.04,8.07,9.25,10.21,9.57,8.77,8.21,7.46,8.31,8.34,8.47,7.8,7.93,8.47,8.41,8.84,9.06,9.22,9.33,9.46,8.87,8.77,9.08,8.87,8.26,9.27,8.95,9.22,10.07,9.06,9.33,9.84,9.54,8.79,8.39,8.63,8.55,10.08,10.34,9.11,8.93,7.67,7.7,8.26,9.14,9.16,8.2,8.36,7.48,7.43,8.25,9.24,9.48,9.46,9.59,8.09,8.28,9.32,9.75,10.31,10.49,10.1,9.8,9.97,9.3,9.59,9.59,9.8,10.74,11.41,11.6,12.05,11.92,11.25,11.12,10.37,10.26,10.5,9.94,10.37,10.28,9.99,10.2,10.74,10.23,10.88,10.88,10.5,11.01,10.82,11.52,10.82,10.72,9.78,9.99,9.81,10.1,10.16,9.51,10.02,9.56,9.86,10.1,10.55,11.06,11.3,11,10.23,10.12,10.47,10.9,10.66,10.82,10.28,10.44,10.95,11.13,11.77,10.94,11.35,11.75,12.23,13.25,13.12,13.31,13.15,13.36,14.05,14.34,14.74,15.7,15.86,17.75,17.96,18.07,17.78,16.42,16.76,16.42,16.69,15.7,15.17,14.61,15.22,16.27,15.34,16.11,17.79,17.66,18.44,19.59,17.18,17.58,18.17,16.06,18.89,18.94,20.11,22.2,21.46,23.57,22.61,22.39,23.86,23.83,25.72,27.09,26.89,24.89,23.21,23.2,25.25,29.47,36.94,42.19,44.36,44.89,42.35,42.8,43.49,45.26,47.06,46.31,46.9,47.05,48.95,52.5,52.29,55.01,55.41,52.84,50.79,49.45,50.9,50.42,55.3,60.1,59.62,62.03,62.11,59.35,62.8,65.3,72.72,75.24,74.58,76.69,73.13,73.98]
            },
            "Air Fryer": {
                "pull_date": "2019-05-28",
                "search_volume": "1,804,000",
                "data": [0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.2, 0.4, 0.5, 0.7, 0.8, 0.8, 0.9, 1.0, 1.2, 1.3, 1.2, 1.0, 1.0, 0.9, 0.8, 0.6, 0.5, 0.4, 0.3, 0.1, 0.2, 0.2, 0.1, 0.1, 0.2, 0.2, 0.1, 0.1, 0.1, 0.1, 0.0, 0.0, 0.1, 0.2, 0.2, 0.2, 0.3, 0.4, 0.5, 1.0, 1.2, 1.3, 1.3, 1.3, 1.4, 1.6, 1.7, 1.8, 2.0, 1.8, 1.9, 2.0, 2.3, 2.6, 2.9, 2.9, 3.0, 3.1, 3.0, 2.9, 2.9, 2.8, 2.5, 2.2, 2.0, 1.9, 1.8, 1.6, 1.6, 1.6, 1.5, 1.7, 1.8, 1.8, 1.8, 1.9, 1.8, 1.8, 1.8, 1.8, 1.8, 1.5, 1.5, 1.4, 1.4, 1.3, 1.3, 1.3, 1.4, 1.6, 1.7, 1.8, 1.8, 2.3, 2.4, 2.5, 2.6, 2.8, 2.8, 2.8, 3.0, 3.2, 3.5, 3.5, 3.9, 4.1, 4.6, 5.3, 6.2, 6.6, 6.7, 6.7, 6.8, 6.8, 6.6, 6.9, 6.7, 6.2, 5.4, 5.3, 5.8, 6.2, 6.6, 6.8, 6.9, 6.8, 7.0, 7.5, 7.8, 8.0, 7.7, 7.6, 7.4, 7.6, 7.8, 8.1, 8.2, 8.2, 8.7, 8.8, 9.2, 9.5, 10.0, 10.2, 10.5, 10.7, 11.0, 11.3, 11.2, 11.1, 10.9, 11.0, 11.4, 11.4, 11.7, 12.5, 14.6, 16.1, 17.3, 18.9, 20.4, 23.6, 26.4, 28.7, 30.8, 31.8, 31.6, 31.6, 31.8, 31.8, 32.3, 30.8, 29.2, 28.6, 28.9, 29.6, 29.6, 29.7, 29.5, 29.7, 29.9, 30.1, 30.1, 29.8, 28.4, 27.5, 27.4, 27.1, 27.4, 28.0, 27.9, 28.2, 29.2, 30.6, 31.3, 31.7, 31.8, 32.1, 32.5, 32.5, 32.5, 32.4, 32.3, 32.4, 32.7, 33.8, 35.7, 39.5, 49.5, 55.8, 60.6, 66.2, 71.5, 81.6, 89.8, 95.4, 99.1, 100.0, 94.9, 93.0, 92.2, 91.1, 90.3, 83.1, 78.2, 75.2, 74.4, 75.4, 75.7, 77.0, 77.8, 77.7, 76.9, 78.2, 77.9, 77.9, 77.4, 75.4, 73.6, 70.7, 69.8, 70.3, 70.7, 70.1, 70.8, 71.0, 71.4, 72.8, 72.8, 72.8, 72.8, 72.8
                ]
            },
            "Portable Blender": {
                "pull_date": "2018-12-28",
                "search_volume": "23,930",
                "data": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6, 1.4, 2.4, 3.4, 5.4, 7.6, 7.6, 7.4, 6.4, 6.0, 4.0, 3.0, 5.2, 6.4, 8.8, 11.5, 14.1, 16.3, 16.3, 18.5, 17.5, 15.5, 15.3, 14.3, 13.7, 17.7, 24.3, 27.7, 35.4, 45.2, 48.1, 45.6, 42.2, 42.4, 35.8, 28.1, 26.9, 33.0, 32.2, 34.5, 43.9, 59.4, 73.5, 79.6, 94.3, 98.7, 100.0, 91.6, 95.2, 94.4, 87.4, 88.2, 82.5, 82.5, 82.5
                ]
            },
             "Canned Wine": {
                "pull_date": "2018-12-01",
                "search_volume": "1890",
                "tag": "early",
                "data": [23, 24, 24, 22, 20, 18, 18, 18, 20, 19, 17, 15, 13, 13, 14, 17, 20, 21, 21, 20, 20, 19, 19, 19, 21, 25, 28, 30, 28, 25, 22, 20, 18, 19, 21, 24, 24, 23, 21, 18, 15, 13, 12, 13, 16, 20, 24, 29, 34, 35, 32, 29, 27, 26, 26, 26, 23, 19, 17, 16, 17, 17, 16, 16, 18, 21, 22, 22, 19, 16, 15, 16, 17, 18, 18, 21, 25, 30, 32, 32, 30, 28, 26, 23, 21, 22, 25, 30, 33, 34, 32, 30, 30, 30, 28, 25, 24, 25, 28, 31, 33, 31, 27, 22, 19, 19, 19, 19, 19, 21, 23, 25, 27, 28, 28, 26, 25, 26, 28, 29, 29, 28, 28, 29, 29, 30, 29, 29, 30, 34, 38, 39, 39, 40, 42, 41, 38, 39, 46, 53, 56, 53, 44, 33, 25, 22, 24, 27, 30, 29, 26, 24, 24, 24, 25, 27, 32, 35, 35, 32, 30, 29, 29, 29, 29, 30, 30, 31, 30, 30, 29, 28, 29, 34, 43, 53, 61, 64, 65, 64, 64, 64, 67, 75, 81, 80, 72, 64, 59, 58, 58, 56, 52, 47, 44, 43, 41, 38, 36, 36, 36, 39, 42, 44, 42, 38, 34, 35, 37, 37, 34, 32, 34, 39, 41, 40, 36, 33, 31, 31, 33, 37, 41, 46, 50, 52, 51, 49, 50, 54, 61, 68, 73, 74, 75, 77, 80, 83, 85, 83, 79, 75, 72, 71, 70, 69, 66, 60, 54, 49, 47, 47, 48, 50, 51, 52, 52, 53, 53, 53, 53]
            },
             "Fortnite": {
                "pull_date": "2018-12-28",
                "search_volume": "15,387,146",
                "data": [0, 0, 0, 0, 0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0, 0, 0, 0, 0.02, 0.02, 0.03, 0.02, 0.01, 0.01, 0.01, 0.01, 0, 0, 0, 0.01, 0.01, 0.02, 0.03, 0.02, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.03, 0.03, 0.03, 0.03, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.01, 0.02, 0.01, 0.02, 0.02, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0, 0.01, 0.01, 0.01, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0, 0.01, 0.01, 0.01, 0, 0, 0.01, 0.01, 0.02, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0, 0.01, 0.01, 0, 0.05, 0.09, 0.14, 0.14, 0.16, 0.24, 0.67, 1.35, 1.75, 1.74, 1.36, 1.09, 0.81, 0.63, 0.83, 1.39, 2.57, 3.39, 3.93, 4.28, 5.56, 5.96, 5.75, 4.37, 3.9, 3.88, 4.29, 4.8, 5.21, 5.78, 6.75, 8.01, 9.58, 11.42, 12.08, 12.43, 12.23, 13.81, 15.97, 19.42, 23.38, 27.24, 28.7, 29.29, 30.37, 34.01, 37.13, 40.09, 40.81, 43.38, 47.23, 54, 57.79, 73.14, 80.02, 86.87, 78.68, 82.91, 84.01, 84.59, 82.17, 81.71, 82, 76.04, 72.44, 67.78, 71.06, 70.08, 76.72, 73.46, 80.01, 76.76, 82.41, 78.11, 78.28, 73.05, 71.9, 71.9
                ]
            },
            "Sildenafil": {
                "pull_date": "2018-12-28",
                "search_volume": "716,483",
                "data": [17.95, 17.95, 17.15, 16.9, 16.82, 18.28, 19.34, 20.05, 19.72, 18.16, 17.93, 17.54, 17.95, 17.74, 17.88, 17.78, 17.9, 18.68, 18.24, 18.77, 17.5, 17.15, 17.85, 18.98, 19.73, 20.02, 19.98, 19.92, 20.66, 20.16, 20.23, 18.87, 18.14, 17.88, 17.42, 17.72, 17.02, 17.58, 18.15, 17.43, 18.09, 18.97, 18.82, 19.9, 20.97, 20.27, 20.52, 20.07, 20.08, 20.79, 20.25, 19.93, 19.82, 20.08, 20.53, 20.82, 21.1, 21.15, 21.84, 23.59, 22.84, 23.92, 23.92, 22.96, 22.98, 21.67, 20.32, 19.6, 19.78, 20.04, 22.29, 25.57, 25.59, 26.08, 25.11, 22.08, 21.55, 20.3, 20.65, 20.63, 21.53, 21.98, 22.36, 23.23, 23.76, 24.52, 23.2, 23.7, 24.61, 25.72, 27.05, 26.89, 26.66, 25.64, 25.17, 26.51, 25.77, 25.93, 27.02, 26.81, 27.21, 28.18, 25.69, 25.48, 25.89, 24.31, 26.86, 27.52, 27.45, 28.52, 28.51, 27.37, 28.37, 29.51, 29.2, 28.52, 28.06, 25.72, 25.36, 25.19, 24.36, 25.55, 24.69, 27.05, 28.11, 28.4, 30.6, 29.96, 28.74, 31.1, 31.56, 30.19, 29.7, 27.42, 25.16, 25.59, 26.91, 26.46, 30.17, 33.58, 33.14, 35.25, 32.64, 29.7, 29.88, 26.94, 26.19, 25.98, 26.16, 27.81, 28.89, 29.29, 30.29, 28.62, 28.12, 29.2, 28.13, 30.52, 31.48, 30.08, 31.11, 32.73, 31.92, 32.53, 31.91, 31.77, 33.1, 39.08, 41.23, 39.38, 39.91, 35.84, 34.62, 36.94, 38.99, 38.15, 39.02, 37.37, 34.82, 36.34, 35.8, 35.3, 35.6, 34.45, 33.77, 33.21, 32.31, 31.43, 35.6, 35.51, 38.09, 37.26, 33.72, 35.9, 33.71, 37.09, 37.07, 36.04, 43.82, 43.62, 46.58, 48.52, 43.76, 47.9, 44.53, 43.99, 45.25, 41.89, 44.56, 43.03, 41.98, 40.97, 40.91, 44.1, 44.45, 46, 47.73, 45.58, 46.38, 45.08, 44.15, 47.19, 49.05, 51.84, 54.52, 62.71, 61.52, 62.79, 60.75, 53.83, 54.14, 52, 54.31, 54.98, 55.38, 57.9, 57.32, 63.73, 64.7, 65.46, 66.59, 65.12, 64.53, 61.21, 58.42, 51.06, 50.87, 61.48, 63.03, 66.61, 69.51, 68.42, 77.73, 79.3, 78.11, 71.41, 63.78, 60.35, 60.35
                ]
            }
        },
        "companies": {
           "hims": {
                "pull_date": "2018-12-28",
                "search_volume": "17,946",
                "data": [2.86, 2.86, 3.09, 2.94, 3.13, 3.09, 3.36, 3.31, 3.25, 3.37, 2.98, 3.2, 3.13, 2.92, 3.04, 2.59, 2.88, 3.29, 3.51, 3.61, 3.66, 3.35, 3.68, 4.22, 3.95, 4.16, 3.96, 3.47, 3.6, 3.5, 3.11, 3.47, 3.36, 3.32, 3.57, 3.85, 3.87, 3.87, 3.97, 3.54, 3.59, 3.61, 3.64, 3.83, 3.58, 3.56, 3.34, 3.1, 3.56, 3.34, 3.53, 3.53, 3.35, 3.53, 3.29, 3.29, 3.11, 3.21, 3.26, 3.35, 3.35, 3.4, 3.56, 3.7, 4.13, 4.2, 3.91, 3.9, 3.74, 3.62, 3.72, 3.77, 3.66, 3.84, 4.15, 4.13, 4.47, 4.25, 4.24, 4.5, 4.58, 4.67, 4.88, 4.76, 4.46, 4.56, 4.48, 4.31, 4.31, 4.56, 4.29, 4.29, 4.18, 3.51, 3.32, 3.07, 3.07, 3.52, 3.52, 3.69, 3.82, 3.97, 4.35, 4.74, 4.34, 4.36, 4.05, 4.11, 4.77, 4.89, 5.21, 5.14, 5.37, 4.95, 4.81, 4.8, 4.37, 4.88, 4.82, 4.2, 4.21, 4.05, 4.3, 4.67, 4.82, 4.93, 4.88, 5.06, 4.86, 4.76, 4.74, 4.55, 4.33, 4.2, 3.98, 4.35, 4.69, 4.45, 4.37, 4.03, 3.95, 3.76, 3.78, 4.31, 4.28, 4.74, 4.96, 4.44, 4.31, 4.18, 4.07, 4.12, 4.17, 4.15, 4.43, 4.37, 4.44, 4.54, 4.15, 4.06, 4.12, 4.48, 4.9, 5.07, 4.88, 4.4, 3.99, 3.92, 4.44, 4.35, 4.7, 4.63, 4.56, 4.62, 4.81, 4.69, 4.53, 4.89, 5.16, 5.61, 5.58, 5.27, 4.68, 4.25, 4.34, 4.42, 4.47, 4.79, 4.74, 5.01, 5.15, 5.66, 5.78, 5.77, 5.61, 5.45, 5.36, 5.07, 5.44, 5.2, 5.79, 5.91, 5.71, 5.68, 5.06, 4.79, 4.87, 4.58, 4.8, 5.15, 5.02, 5.27, 4.89, 4.85, 4.89, 5.74, 7.27, 10.71, 13.33, 15.62, 17.45, 17.29, 17.97, 17.28, 18.78, 27.56, 31.43, 33.12, 32.63, 24.27, 22.17, 22.89, 26.28, 32.96, 34.21, 38.58, 42.32, 40.58, 41.5, 41.58, 40.71, 44.13, 47.7, 51.76, 56.06, 60.97, 62.88, 63.75, 62.52, 60.26, 59.32, 58.14, 60.87, 59.31, 60.97, 59, 56.6, 55.99, 55.99
                ]
            },
            "Juul": {
                "pull_date": "2018-12-28",
                "search_volume": "1,001,430",
                "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 3, 4, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 6, 7, 7, 7, 7, 8, 9, 9, 9, 10, 10, 10, 11, 10, 10, 11, 11, 12, 12, 12, 11, 11, 12, 12, 13, 13, 13, 14, 15, 16, 16, 16, 17, 17, 18, 20, 20, 20, 23, 26, 28, 28, 28, 31, 33, 35, 35, 39, 42, 41, 42, 43, 43, 44, 52, 53, 44, 42, 42, 43, 43, 44, 44, 45, 44, 46, 48, 46, 47, 46, 47, 50, 49, 49, 49, 49, 50, 52, 54, 57, 58, 56, 55, 57, 58, 63, 70, 67, 63, 62, 63, 65, 66, 64, 78, 86, 70
                ]
            },

            "Shein": {
                "pull_date": "2018-12-28",
                "search_volume": "1,127,370",
                "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 4, 3,
                    4, 5, 5, 4, 4, 5, 5, 5, 6, 6, 5, 7, 7, 7, 7, 7, 8, 9, 8, 8, 9,
                    10, 9, 13, 12, 10, 8, 10, 9, 10, 13, 13, 12, 10, 10, 10, 9, 11,
                    11, 13, 12, 14, 13, 13, 12, 12, 11, 13, 13, 13, 14, 15, 15, 16,
                    19, 17, 18, 21, 20, 21, 20, 20, 19, 20, 19, 20, 20, 21, 24, 22,
                    22, 22, 22, 24, 27, 26, 21, 20, 17, 17, 17, 19, 19, 19, 17, 20,
                    22, 24, 24, 24, 25, 27, 28, 29, 30, 30, 33, 32, 29, 27, 29, 33,
                    31, 32, 32, 35, 35, 35, 38, 39, 40, 39, 42, 39, 34, 36, 38, 38,
                    40, 40, 39, 40, 36, 32, 38, 40, 49, 46, 34, 34, 30, 33, 39, 39,
                    44, 45, 48, 52, 51, 58, 58, 63, 65, 68, 64, 64, 72, 68, 72, 74,
                    76, 79, 87, 97, 92, 88, 100, 98, 93, 96, 92, 92, 96, 86, 84, 76,
                    72, 79, 79, 80, 75, 79, 79, 78, 72, 67, 77, 82, 91, 80]
            },
            "StockX": {
                "pull_date": "2018-12-28",
                "search_volume": "80,590",
                "data": [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1,
                    0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
                    0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,
                    0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1,
                    0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 5, 2, 1, 1, 3, 2, 1, 2, 2,
                    2, 3, 1, 2, 2, 2, 3, 3, 4, 5, 2, 3, 3, 2, 2, 2, 1, 1, 3, 2, 2,
                    3, 2, 2, 3, 2, 4, 3, 4, 3, 2, 3, 5, 6, 5, 6, 7, 6, 7, 8, 9, 6,
                    6, 8, 13, 11, 11, 6, 8, 9, 11, 10, 9, 10, 12, 11, 11, 12, 9, 12,
                    12, 10, 13, 15, 13, 11, 12, 12, 11, 15, 14, 11, 12, 12, 12, 14,
                    14, 13, 11, 19, 20, 15, 22, 26, 40, 44, 40, 44, 44, 38, 37, 34,
                    31, 30, 31, 33, 43, 58, 54, 50, 54, 47, 54, 47, 49, 54, 47, 51,
                    45, 44, 50, 49, 45, 48, 43, 47, 46, 43, 45, 45, 55, 62, 60, 66,
                    61, 60, 76, 83, 76, 71, 66, 70, 70, 72, 78, 85, 100, 89]
            },
            "Afterpay": {
                "pull_date": "2019-05-28",
                "search_volume": "820,310",
                "data": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.2, 0.2, 0.0, 0.2, 0.2, 0.2, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.5, 0.5, 0.2, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.2, 0.2, 0.0, 0.0, 0.0, 0.1, 0.6, 0.6, 0.6, 0.5, 0.0, 0.7, 0.7, 0.7, 0.7, 0.0, 0.5, 0.5, 1.0, 1.0, 0.5, 0.5, 0.2, 0.3, 0.3, 0.6, 0.3, 0.5, 0.5, 0.5, 1.0, 0.9, 1.1, 1.2, 0.7, 0.6, 0.3, 0.2, 0.7, 0.7, 0.9, 0.7, 0.7, 0.7, 0.6, 0.5, 0.6, 0.6, 0.6, 0.7, 0.7, 0.7, 1.2, 1.4, 0.8, 2.1, 1.8, 3.0, 3.2, 2.6, 2.7, 1.5, 1.9, 1.2, 1.1, 1.7, 1.6, 1.9, 1.9, 2.2, 2.9, 3.8, 4.2, 4.1, 4.3, 3.4, 4.4, 4.0, 3.5, 3.7, 2.6, 2.7, 2.4, 3.1, 3.3, 3.1, 3.6, 4.3, 4.4, 5.5, 5.2, 5.0, 6.2, 6.2, 7.0, 8.8, 7.4, 7.1, 6.7, 4.4, 4.7, 5.2, 5.1, 5.7, 6.6, 6.7, 7.2, 7.2, 7.2, 7.2, 7.3, 7.9, 7.8, 8.6, 9.3, 8.7, 9.4, 7.6, 7.1, 6.9, 7.5, 8.3, 8.2, 9.0, 8.3, 8.2, 8.7, 9.7, 9.5, 10.3, 12.2, 10.4, 11.6, 11.5, 9.9, 14.6, 14.8, 15.2, 21.6, 18.8, 18.0, 17.0, 12.6, 11.4, 10.0, 11.4, 9.0, 9.5, 10.7, 12.9, 12.4, 12.4, 12.5, 10.4, 10.3, 9.8, 11.0, 11.4, 13.1, 16.2, 19.9, 27.4, 37.3, 46.4, 56.3, 62.0, 61.3, 71.0, 74.6, 81.7, 95.1, 94.6, 100.0, 98.5, 98.5
                ]
            },
             "Nextdoor": {
                "pull_date": "2018-11-28",
                "search_volume": "761,291",
                "data": [2.0, 2.0, 2.0, 2.0, 2.0, 2.4, 2.4, 2.5, 2.7, 2.7, 2.8, 2.6, 2.7, 2.6, 2.4, 2.3, 2.2, 2.2, 1.9, 1.5, 1.2, 0.8, 0.8, 0.6, 0.6, 0.3, 0.0, 0.1, 0.4, 0.8, 1.0, 1.5, 1.7, 2.3, 2.6, 2.5, 3.1, 3.5, 4.4, 4.9, 5.4, 6.3, 6.7, 7.1, 7.4, 8.2, 8.5, 9.0, 8.8, 9.2, 9.5, 9.8, 10.5, 10.5, 11.1, 11.4, 11.9, 12.1, 12.6, 12.9, 13.0, 12.8, 12.6, 12.7, 12.9, 13.4, 13.9, 13.9, 13.6, 13.7, 13.5, 12.9, 12.9, 13.2, 12.7, 11.6, 10.7, 10.7, 10.7, 10.6, 10.9, 11.8, 11.9, 11.6, 12.1, 13.0, 13.2, 13.4, 13.9, 14.5, 15.1, 15.4, 16.0, 17.1, 17.5, 18.4, 19.6, 20.4, 21.1, 21.7, 22.4, 23.0, 23.6, 23.9, 24.8, 24.9, 25.0, 25.3, 25.8, 26.2, 26.8, 27.2, 27.5, 27.3, 27.4, 27.2, 26.8, 27.0, 27.4, 28.0, 28.6, 28.3, 28.1, 27.9, 27.9, 28.1, 28.7, 28.5, 28.1, 28.1, 27.9, 28.7, 29.3, 30.2, 31.1, 32.1, 32.8, 34.2, 35.8, 36.7, 37.7, 38.7, 40.1, 41.5, 42.6, 44.4, 46.2, 47.8, 48.5, 49.9, 51.0, 53.1, 54.3, 56.0, 57.6, 58.9, 59.9, 60.9, 62.4, 62.8, 63.1, 62.5, 62.3, 63.1, 62.9, 62.8, 62.1, 61.4, 59.9, 59.7, 59.7, 59.8, 60.3, 58.8, 57.8, 55.8, 55.6, 55.2, 55.4, 54.4, 53.4, 52.8, 51.9, 52.7, 53.2, 54.1, 54.1, 53.8, 54.5, 55.6, 56.8, 57.3, 58.7, 59.1, 59.9, 61.4, 62.7, 65.0, 66.3, 67.3, 68.3, 69.9, 71.2, 72.5, 74.1, 75.3, 77.4, 78.7, 79.9, 81.3, 83.2, 84.1, 85.3, 86.1, 86.6, 87.3, 86.8, 86.2, 86.3, 85.8, 85.1, 85.7, 84.7, 83.2, 83.6, 82.8, 82.6, 81.2, 80.2, 79.1, 78.2, 76.6, 76.0, 76.5, 75.9, 76.0, 75.8, 77.8, 78.0, 79.1, 80.4, 81.0, 81.2, 81.8, 81.3, 83.2, 84.2, 84.5, 85.8, 87.5, 88.6, 90.7, 93.5, 96.6, 100.0, 99.9, 99.9, 99.9, 99.9
                ]
            }
        },
        "industries": {
           "CBD": {
                "pull_date": "2018-12-28",
                "search_volume": "1,414,170",
                "data": [4.17, 5.41, 5.21, 4.13, 4.42, 5.58, 6.79, 6.77, 5.94, 5.62, 5.87, 6.81, 5.94, 6.1, 7.91, 6.73, 5.8, 6.13, 5.21, 5.62, 5.72, 5.76, 5.83, 5.71, 5.54, 5.42, 5.6, 5.11, 5.23, 5.65, 4.82, 5.25, 5.93, 5.32, 6.03, 6, 5.6, 5.35, 6.58, 5.37, 5.3, 6.03, 5.44, 5.86, 5.76, 6.03, 6.81, 7.08, 6.62, 6.96, 6.92, 8.35, 6.99, 7.53, 9.9, 6.12, 6.48, 7.33, 7.12, 7.14, 7.14, 6.86, 7.3, 8.18, 8.09, 7.67, 7.92, 8.23, 8.15, 8.5, 7.37, 9.73, 9.29, 9.27, 7.74, 7.97, 8.59, 7.58, 8.21, 8.36, 9.81, 8.66, 8.46, 7.79, 9.07, 9.08, 8.55, 8.87, 9.5, 9.93, 9.42, 10.27, 9.05, 8.71, 9.69, 10.14, 10.29, 10.87, 10.46, 9.62, 9.62, 10.55, 9.5, 8.94, 10.16, 10.34, 9.95, 9.39, 9.96, 10.35, 10.4, 10.89, 10.75, 11.41, 11.38, 12.96, 12.54, 12.36, 12.73, 11.73, 12.2, 11.76, 12.03, 11.57, 12.97, 12.96, 12.65, 12.75, 14.37, 11.32, 11.75, 12.52, 12.22, 11.65, 12.16, 12.02, 13.99, 13.63, 14.26, 14.63, 14.3, 13.84, 22.44, 16.37, 16.64, 15.71, 16.54, 18.76, 15.59, 19.34, 17.34, 17.35, 17.52, 18.7, 19.46, 18.26, 20.46, 18.4, 26.73, 30.89, 20.9, 23.34, 22.51, 21.76, 22.82, 23.34, 21.23, 23.52, 24.24, 23.55, 22.86, 22.82, 23.93, 27.13, 24.07, 23.01, 25.34, 26.63, 25.46, 24.84, 24.77, 27.09, 25.9, 29.32, 25.93, 29.62, 29.78, 28.22, 29.39, 29.1, 32.72, 33.98, 32.69, 32.15, 31.77, 31.23, 31.6, 32.16, 33.14, 34.8, 33.69, 33.99, 37.16, 36.78, 36.59, 37.95, 38.14, 38.91, 37.77, 37.75, 40.56, 42.63, 37.59, 39.44, 45.97, 45.12, 45.75, 46.56, 49.09, 50.52, 48.5, 48.95, 49.86, 50.65, 55.96, 56.91, 53.25, 56.94, 62.62, 67.46, 61.28, 62.86, 70.23, 70.42, 65.16, 64.64, 70.27, 72.09, 74.82, 69.59, 71.86, 73.05, 75.85, 75.52, 78.47, 80.03, 79.09, 80.45, 75, 76.74, 87.19, 84, 84.12, 81.16, 92.12, 97.5, 89.42, 89.41, 90.56, 87.31]
            },
            "Axe Throwing": {
                "pull_date": "2019-01-14",
                "search_volume": "59,500",
                "data": [5.25,5.25,4.83,4.69,4.74,5.66,5.65,5.98,5.81,5.61,6.35,6.8,7,6.59,6.61,5.94,6.02,6.36,6.3,5.71,5.68,5.44,5.43,5.82,6.11,6.24,5.87,5.98,5.42,5.06,5.03,4.78,4.8,5.21,5.37,5.57,6.26,5.76,5.78,5.47,4.72,4.81,4.89,5.08,5.11,5.71,5.74,5.39,5.38,5.48,5.45,5.93,6.13,5.39,5.24,5.23,5.26,5.25,4.83,5.16,5.82,6.35,6.82,6.69,6.63,6.59,6.34,6.07,5.46,5.56,5.91,6.25,6.91,6.94,7.07,7,6.46,6.02,5.71,5.68,5.9,6.12,6.24,5.75,5.34,5.42,5.94,6.24,6.83,8.13,7.48,7.72,7.27,5.84,5.68,5.64,5.5,5.63,6.3,6.12,6.1,5.99,5.49,5.3,5.48,5.43,5.32,5.97,5.98,6.01,6.03,5.8,5.74,6.32,6.94,6.67,7.31,6.94,6.72,7.26,6.74,7.14,6.96,6.97,7.41,6.71,7.02,6.79,6.63,7.16,6.99,6.94,6.85,6.83,6.7,6.7,6.59,6.75,6.8,6.92,7.3,7.5,7.96,8.12,8.38,8.1,7.88,7.72,7.05,7.31,7.91,8.21,9.03,11.27,10.68,12.1,12.33,10.78,11.84,12.08,12.67,12.27,12.57,12.01,12.19,13.44,13.6,13.73,13.3,13.31,13.62,13.3,14.52,14.81,15.02,17.23,17.65,17.89,17.15,15.39,14.12,14.42,16.18,16.97,18.2,17.94,16.97,17.2,16.43,15.94,16.18,16.59,17.92,18.94,19.7,19.64,19.79,19.97,20.87,21.03,22.87,24.61,23.22,23.31,22.05,21.55,22.73,24.58,23.95,23.5,24.63,24.59,27.24,29.02,29.62,32.2,32.76,33.61,35.98,37.78,44.14,49.43,52.1,56.45,56.95,59.16,61.58,64.46,65.53,64.81,66.17,63.15,63.39,66.89,66.56,68.74,69.45,67.63,66.46,63.02,61,62.01,62.95,65.04,69.13,70.84,73.15,76.5,76.85,77.16,80.49,80.97,82.36,86.89,87.89,88.32,86.88,82.92,82.19]
            },
            "Plant Delivery": {
                "pull_date": "2018-12-28",
                "search_volume": "7814",
                "data": [25.926, 25.926, 25.926, 28.889999999999997, 30.741999999999997, 29.629999999999995, 27.407999999999998, 27.038, 23.333999999999996, 23.704, 25.556000000000004, 25.556000000000004, 26.668000000000006, 28.890000000000008, 28.890000000000008, 30.372000000000003, 31.112000000000013, 27.408000000000005, 30.00000000000001, 25.553999999999995, 25.18399999999999, 28.517999999999983, 29.627999999999997, 26.29599999999998, 26.667999999999985, 24.815999999999985, 22.963999999999988, 23.333999999999993, 22.96200000000001, 24.44200000000003, 25.924000000000024, 29.998000000000026, 29.62800000000002, 29.62800000000002, 29.258000000000017, 32.960000000000015, 28.886000000000013, 28.515999999999984, 27.40599999999997, 29.99999999999998, 28.519999999999982, 27.779999999999973, 28.892000000000007, 29.26199999999999, 29.26199999999999, 26.298000000000002, 25.92800000000002, 26.298000000000002, 30.002000000000045, 25.926000000000023, 25.186000000000014, 24.813999999999986, 26.296000000000003, 25.925999999999977, 27.407999999999994, 31.482000000000017, 34.44600000000005, 32.59400000000005, 33.33400000000006, 34.076000000000064, 32.59400000000005, 31.854000000000042, 32.224000000000025, 33.33600000000001, 32.963999999999984, 35.185999999999964, 34.07399999999998, 37.40599999999999, 33.702, 35.553999999999995, 35.92400000000002, 40.737999999999964, 38.14599999999996, 42.959999999999944, 42.959999999999944, 39.62799999999997, 37.40600000000004, 37.40600000000004, 34.814000000000036, 36.666000000000075, 37.40600000000004, 35.92600000000002, 38.89000000000006, 39.26000000000003, 40.37200000000003, 39.261999999999986, 39.261999999999986, 35.55799999999999, 35.18800000000001, 32.96599999999999, 32.223999999999975, 32.223999999999975, 34.07599999999993, 33.33599999999997, 32.223999999999975, 34.818000000000026, 34.818000000000026, 35.55799999999999, 31.853999999999996, 33.33599999999997, 34.44599999999991, 29.999999999999908, 28.147999999999957, 31.109999999999946, 32.219999999999985, 32.59000000000005, 36.66400000000003, 37.03400000000001, 37.403999999999996, 40.738000000000014, 48.88599999999997, 53.701999999999956, 58.14799999999995, 64.81599999999999, 65.18599999999996, 60.742000000000004, 58.148000000000046, 59.25800000000008, 57.03600000000006, 52.22200000000002, 45.55599999999995, 46.667999999999935, 41.111999999999895, 37.77799999999998, 38.88799999999992, 39.997999999999955, 37.776000000000025, 35.92399999999998, 34.8119999999999, 34.07199999999993, 35.92399999999998, 37.40599999999995, 44.07399999999998, 45.92600000000002, 52.592000000000006, 48.88799999999992, 46.665999999999805, 45.92399999999979, 46.293999999999684, 39.99799999999978, 46.295999999999914, 47.776000000000025, 45.92399999999998, 45.18400000000001, 43.33199999999997, 41.479999999999926, 42.59199999999983, 42.59199999999983, 44.81399999999994, 44.44399999999987, 43.70199999999986, 42.95999999999985, 45.18400000000001, 41.10999999999986, 51.479999999999926, 51.84999999999982, 55.183999999999834, 54.44199999999982, 57.77599999999984, 52.22199999999994, 52.22199999999994, 53.704000000000086, 53.33400000000002, 54.44400000000005, 58.51800000000003, 60.000000000000185, 52.222000000000115, 49.63000000000011, 45.92800000000007, 42.223999999999975, 42.593999999999866, 51.111999999999895, 55.92599999999984, 55.92599999999984, 50.73999999999978, 49.999999999999815, 49.62999999999975, 45.55599999999977, 48.147999999999776, 53.33399999999983, 53.33399999999983, 45.55599999999977, 45.18599999999988, 45.55599999999995, 44.81399999999994, 44.81399999999994, 50.370000000000076, 51.85200000000005, 50.370000000000076, 51.11200000000008, 49.63000000000011, 49.63000000000011, 48.888000000000105, 54.44400000000005, 53.33200000000015, 52.96200000000008, 52.96200000000008, 51.85200000000005, 48.89000000000014, 51.11200000000008, 53.704000000000086, 48.889999999999965, 50.742000000000004, 46.66799999999985, 41.48399999999983, 37.409999999999854, 40.74199999999983, 45.18599999999988, 49.259999999999856, 48.517999999999844, 52.22199999999994, 52.222000000000115, 48.888000000000105, 54.072000000000116, 65.18400000000001, 64.44399999999987, 65.1859999999997, 65.1859999999997, 60.74199999999983, 55.55599999999977, 54.0739999999998, 57.03600000000006, 57.777999999999885, 55.92599999999984, 58.89000000000014, 64.0760000000002, 66.29799999999996, 67.77799999999988, 70, 66.66599999999998, 67.40600000000013, 60.740000000000144, 62.59200000000019, 62.59200000000019, 63.704000000000086, 61.48199999999997, 69.26000000000022, 67.77800000000025, 72.22200000000012, 71.47999999999993, 72.21999999999971, 69.2559999999994, 71.84999999999964, 69.62799999999952, 69.25799999999981, 69.62799999999989, 66.2959999999999, 63.33199999999961, 61.84999999999964, 63.70199999999968, 63.70199999999968, 66.29399999999987, 70.74000000000015, 77.77800000000025, 79.62999999999992, 81.1119999999999, 82.96399999999994, 78.14799999999995, 78.14799999999995, 78.14799999999995
                ]
            },
            "Gut Health": {
                "pull_date": "2018-12-28",
                "search_volume": "21,196",
                "data": [12.81, 12.81, 13.21, 13.62, 14.14, 14.61, 15.55, 15, 15.23, 15.11, 14.61, 14.36, 15.35, 14.99, 15.08, 16.31, 16.09, 15.45, 16.02, 15.84, 15.65, 15.14, 15.1, 14.39, 14.49, 14.71, 14.98, 14.54, 14.96, 14.83, 14.64, 14.58, 15.96, 15.21, 14.79, 14.47, 14.21, 13.35, 14.73, 17.01, 17.53, 18.84, 20.35, 19.89, 18.95, 19.24, 18.32, 17.89, 17.55, 17.52, 17.91, 19.02, 17.57, 17.82, 18.74, 18.54, 18.34, 19.76, 20.57, 19.44, 19.22, 20.48, 21.4, 22.06, 22.68, 24.47, 23.7, 24, 24.62, 26.4, 26.4, 27.41, 26.77, 26.48, 26.43, 26.19, 25.92, 25.32, 26.23, 25.52, 25.22, 25.38, 26.49, 26.25, 26.46, 27.34, 27.82, 28.25, 27.75, 27.68, 27.11, 27.13, 27.16, 28.06, 28.23, 28.41, 28.4, 28.14, 27.41, 26.57, 25.03, 24.38, 24.4, 23.5, 23.33, 24.9, 26.86, 29.28, 31.13, 33.96, 35.45, 34.19, 33.61, 33.93, 33.64, 33.33, 35.31, 35.39, 35.79, 35.82, 35.13, 33.87, 33.54, 34.02, 34.41, 34.67, 36.41, 36.9, 36.11, 35.61, 36.69, 35.77, 35.87, 35.52, 36.05, 34.84, 33.98, 32.73, 34.98, 34.59, 35.67, 36.81, 38.03, 36.56, 36.38, 36.92, 36.25, 35.83, 36.75, 38.66, 38.36, 38.58, 38.18, 37.97, 38.25, 36.33, 36.14, 37.06, 39.23, 41.72, 46.96, 51.14, 51.71, 50.66, 48.81, 47.6, 46.17, 48.54, 49.47, 50.53, 52.3, 54.49, 54.31, 54.94, 54.84, 55.02, 53.33, 52.34, 50.97, 50.49, 50.43, 52.49, 54.11, 55.51, 56.18, 56.58, 57.06, 57.19, 57.8, 59.07, 57.63, 55.28, 52.33, 51.21, 49.9, 50.15, 50.63, 53.45, 54.61, 55.96, 57.08, 58, 59.17, 60.15, 57.37, 57.66, 57.1, 56.19, 54.45, 55.17, 55.93, 58.91, 62.3, 66.04, 68.22, 69.37, 69.61, 69.86, 70.1, 72.59, 72.54, 73.16, 73.48, 72.87, 73.03, 75.68, 75.41, 75.48, 76.04, 76.68, 76.05, 76.18, 78.1, 78.88, 78.36, 77.48, 77.65, 79.24, 80.41, 82.33, 85.02, 88.88, 87.09, 86.23, 88.57, 85.01, 81.44, 79.72, 79.48, 77.21, 78.61, 79.75, 80.58, 82.29, 82.64, 83.04, 81.21, 79.85, 79.85
                        ]
            },
            "Solo Travel": {
                "pull_date": "2018-12-28",
                "search_volume": "42,560",
                "data": [8.7, 8.7, 8.7, 9.6, 10.3, 10.6, 9.4, 8.9, 8.9, 5.3, 4.4, 4.9, 5.4, 3.3, 0.6, 1.9, 1.9, 0.0, 0.2, 1.7, 3.8, 6.9, 5.8, 7.3, 6.0, 5.6, 7.7, 8.6, 11.8, 13.1, 13.8, 15.5, 13.2, 10.8, 9.9, 11.3, 14.9, 15.7, 15.9, 19.6, 20.2, 19.3, 18.7, 19.6, 20.7, 21.6, 26.8, 29.7, 28.1, 30.2, 31.5, 28.2, 23.1, 26.1, 29.3, 27.3, 28.3, 31.0, 31.5, 26.7, 22.8, 19.0, 17.7, 14.7, 15.8, 14.8, 15.1, 15.0, 13.0, 11.0, 10.4, 9.8, 10.4, 12.0, 13.8, 17.5, 17.5, 22.1, 24.5, 27.4, 29.0, 28.2, 29.3, 26.0, 28.1, 29.8, 31.8, 34.0, 36.3, 41.1, 40.5, 41.9, 39.2, 36.9, 35.6, 31.7, 28.8, 26.2, 29.8, 33.2, 32.8, 33.7, 35.8, 36.2, 34.4, 32.5, 32.9, 33.1, 34.3, 34.4, 34.1, 32.4, 34.1, 34.6, 33.8, 30.2, 30.0, 29.6, 25.4, 22.8, 22.1, 23.6, 23.0, 24.5, 24.8, 26.3, 27.4, 27.3, 28.7, 32.4, 36.2, 39.4, 40.5, 46.5, 47.7, 46.2, 46.2, 46.5, 45.3, 45.3, 45.6, 51.1, 52.7, 55.4, 57.7, 57.4, 59.6, 53.8, 52.5, 50.6, 50.1, 49.5, 49.2, 51.4, 52.7, 53.7, 52.7, 53.2, 53.8, 56.2, 56.7, 52.9, 54.0, 54.3, 51.8, 51.4, 51.7, 54.5, 53.8, 53.6, 53.6, 52.0, 52.6, 53.6, 56.2, 59.1, 60.5, 56.8, 53.8, 48.6, 44.6, 39.8, 38.6, 46.9, 51.3, 55.5, 57.4, 59.6, 61.1, 57.5, 56.6, 54.7, 59.5, 60.5, 62.3, 62.5, 61.3, 66.1, 64.3, 62.0, 63.6, 64.3, 66.5, 64.1, 67.7, 71.7, 71.8, 72.9, 69.8, 75.1, 72.5, 72.7, 76.5, 76.8, 80.9, 78.7, 79.7, 77.6, 74.3, 72.4, 70.0, 68.0, 68.7, 70.0, 67.4, 66.2, 64.6, 65.0, 60.9, 59.1, 60.2, 62.8, 66.6, 68.2, 72.1, 76.6, 83.1, 88.0, 90.1, 91.5, 92.8, 94.2, 93.0, 90.8, 91.4, 92.4, 89.8, 89.2, 90.3, 87.5, 85.5, 86.4, 88.7, 90.0, 87.9, 91.4, 100.0, 99.2, 99.2
                        ]
            },
            "Keto": {
                "pull_date": "2018-12-28",
                "search_volume": "1,084,389",
                "data":
                    [9.49, 10.34, 11.3, 7.6, 11.19, 15.93, 15.17, 14.62, 14.62, 13.69, 14.21, 13.94, 14.21, 14.34, 15.84, 13.16, 13.63, 12.83, 15.02, 13.84, 12.37, 13.49, 14.21, 13.52, 13.77, 13.12, 15.07, 14.28, 14.43, 14.31, 12.88, 15.27, 15.46, 15.22, 14.51, 16.96, 17.54, 14.16, 14.41, 14.39, 14.61, 13.46, 11.72, 13.71, 11.76, 12.93, 12.54, 11.7, 13.2, 12.4, 11.08, 9.97, 10.38, 11.9, 12.95, 8.55, 10.8, 17.32, 16.09, 14.99, 16.34, 15.16, 14.64, 14.71, 15.87, 16.21, 14.72, 16.07, 18.23, 15.92, 15.1, 15.88, 15.8, 17.32, 14.95, 15.03, 15.38, 14.3, 16.62, 16.79, 16.61, 15.94, 14.27, 14.16, 16.96, 16.2, 17.31, 15.97, 16.88, 18.07, 15.77, 14.89, 13.76, 15.37, 14.88, 12.82, 13.18, 13.98, 12.72, 12.32, 13.38, 11.95, 11.55, 10.79, 9.93, 12.75, 11.12, 9.43, 11.36, 18.14, 17.99, 18.72, 16.94, 17.86, 16.43, 15.69, 14.73, 15.89, 15.73, 15.13, 14.79, 13.89, 15.16, 17.87, 16.22, 18.09, 17.35, 15.68, 16.84, 16.42, 16.8, 16.77, 15.87, 17.38, 14.5, 14.74, 17.85, 16.14, 17.07, 17.95, 20.18, 19.21, 19.98, 19.04, 18.47, 19.87, 20.41, 18.58, 17.31, 17.34, 18.01, 17.65, 17.91, 16.46, 17.56, 16.62, 16.37, 18.37, 19.98, 16.71, 16.19, 28.32, 32.36, 29.27, 28.25, 30.53, 28.25, 27.52, 27.68, 28.98, 29, 27.9, 30.09, 31.95, 30.7, 30.98, 30.39, 33.02, 33.32, 34.39, 32.69, 30.34, 30.62, 33.41, 33.88, 35.25, 35.15, 34.19, 34.69, 38.44, 39.34, 37.59, 39.09, 38.09, 34.86, 33.02, 32.17, 33.44, 34.56, 38.52, 37.79, 38.84, 39.69, 41.39, 38, 39.35, 38.12, 34.51, 37.43, 47.03, 39.02, 35.73, 34.8, 58.65, 69.2, 63.44, 65.09, 63.26, 65.81, 61.58, 64.7, 64.62, 64.28, 63.34, 64.37, 65.87, 63.81, 71.52, 73.12, 71.5, 80.55, 81.19, 84.04, 88, 85.42, 86.97, 88.49, 87.92, 90.3, 85.98, 94.81, 91.01, 92.75, 91.55, 92.47, 96.31, 87.92, 83.68, 75.69, 75.25, 72.98, 70.92, 68.81, 68.19, 68.54, 67.52, 64.9, 66.14, 65.69, 56.33
                    ]
            }
        }
    };
    var counter = 0;
    var content = "";
    var datasets = [];
    content += '<div class="container">';
    content += '<div class="row" id="result-row">';
    _.mapValues(Object.assign({}, dataObject[params]), function (value, objKey) {
        counter++;
        var key = "column-" + counter
        content += '<div class="result col-lg-4 col-md-4 col-sm-6 col-xs-12 full-width-480 module positionRelative">';
        if (typeof value.tag != "undefined" && value.tag == "early") {
            content += '<div class="earlybadge"><img src="./images/early-badge.png" width="110" height="auto"></div>';
        }
        content += '<div class="card chartcontainer no-select">';
        content += '<h3 class="text-left"><a target="_blank" href="https://www.google.com/search?q=' + objKey + '">' + objKey + '</a></h3>';
        content += '<h4>' + numeral(value.search_volume).format('0,0') + ' searches / mo</h4>';
        content += '<canvas id="' + key.replace(/\s/g, '') + '" width="100%" height="100%"></canvas>';
        content += '<p class="p-tooltip text-center" id="' + key.replace(/\s/g, '') + '-data"></p>';
        content += '</div>';
        content += '</div>';
        datasets.push({ data_set: value.data, id: key.replace(/\s/g, '') });
    });
    content += '</div>';

    $("#result-data").html(content);
    _.map(datasets, function (o, index) {
        setChart(o);
    });

    $(".module").each(function (i, el) {
        var el = $(el);
        if (el.hasClass("module")) {
            $(".module").splice(i, 1);
            el.addClass("come-in").removeClass('module');
        }
    });
}

function setChart(params) {
    var labels = ((params.data_set).length > 0) ? (params.data_set).map(function (e, i) {
        return (moment('2018-08-31').add(i, 'week').subtract(5, 'years'))
    }) : [];

    var customTooltips = function (tooltip) {
        if (typeof tooltip.dataPoints != "undefined" && tooltip.dataPoints.length > 0) {
            tooltip.dataPoints.map(function (dataPoint) {
                var content = (labels[dataPoint.index]).format('MMMM, YYYY');
                $("#" + params.id + "-data").html(content);
            });
        } else {
            $("#" + params.id + "-data").html("");
        }
    };
    var options = {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: 'My First dataset',
                data: params.data_set,
                borderColor: "#35a0e8",
                backgroundColor: "#ffff",
                borderWidth: 1,
                pointBorderColor: '#35a0e8',
                pointBackgroundColor: '#35a0e8',
                pointHoverRadius: 3,
                pointHitRadius: 3
            }]
        },
        options: {
            maintainAspectRatio: false,
            elements: {
                point: {
                    radius: 0
                }
            },
            scales: {
                xAxes: [{
                    time: {
                        unit: 'day',
                        displayFormats: {
                            month: 'dd'
                        },
                        max: moment(labels[0]).format('dd'),
                        min: moment(labels[labels.length - 1]).format('dd')
                    },
                    ticks: {
                        display: false,
                        tickMarkLength: 0,
                        mirror: true

                    },
                    gridLines: {
                        display: false,
                        drawBorder: false,
                        drawTicks: false
                    },
                }],
                yAxes: [{
                    ticks: {
                        display: false,
                        tickMarkLength: 0,
                        mirror: true
                    },
                    gridLines: {
                        display: false,
                        drawBorder: false,
                        drawTicks: false
                    }
                }]
            },
            legend: {
                display: false
            },
            tooltips: {
                enabled: false,
                mode: 'index',
                intersect: false,
                custom: customTooltips
            },
            hover: {
                intersect: false
            },
            layout: {
                padding: {
                    top: 5,
                    left: 0,
                    right: 0,
                    bottom: -20
                }
            },
            animation: false,
            defaultFontFamily: Chart.defaults.global.defaultFontFamily = "HelveticaNeueThin",
        }
    };

    var ctx = document.getElementById(params.id).getContext('2d');
    ctx.height = 100;
    var dataLineChart = new Chart(ctx, options);
}

//Stripe
function registerElements(elements) {
    var stripeIsComplete = false;
    var multipleElementComplete = [false, false, false];
    if (isUpdatingCard) {
        elements.forEach(function (element, idx) {
            element.on('change', function (event) {
                // Race condition error
                if (!isUpdatingCard) return false;
                if (event.error) {
                    if (elements.length > 1) {
                        multipleElementComplete[idx] = false;
                    } else {
                        stripeIsComplete = false;
                    }
                } else {
                    if (elements.length > 1) {
                        multipleElementComplete[idx] = event.complete;
                    } else {
                        stripeIsComplete = event.complete;
                    }
                    if ($("#stripe-card").hasClass("invalid")) {
                        $("#stripe-card").removeClass("invalid");
                    }
                    if ($("#card-number-element").hasClass("invalid")) {
                        $("#card-number-element").removeClass("invalid");
                    }
                    if ($("#card-expiry-element").hasClass("invalid")) {
                        $("#card-expiry-element").removeClass("invalid");
                    }
                    if ($("#card-cvc-element").hasClass("invalid")) {
                        $("#card-cvc-element").removeClass("invalid");
                    }
                }
            });
        });
    }

    $("#checkout-form").on('submit', function (e) {
        e.preventDefault();

        var additionalInformation = {};
        $("#checkout-form :input:not([type=button]):not([type=submit]):not([type=reset]):not('.__PrivateStripeElement-input')").each(function () {
            var input = $(this);
            if (input.val() == "" && input.attr('id') != "promo") {
                input.addClass("invalid");
            } else if (input.attr('id') == "emailAddress" && isValidEmailAddress(input.val()) == false) {
                input.addClass("invalid");
            } else if (input.attr('id') == "promo" && !valid_promo(input.val())){
                input.addClass("invalid");
                additionalInformation[input.attr("name")] = input.val();
            } else {
                input.removeClass("invalid");
                additionalInformation[input.attr("name")] = input.val();
            }
        });

        formType = $("#checkout-form").attr('data-type');

        // Iterate through all stripe card elements, make sure every element is valid
        var areAllComplete = multipleElementComplete.every(function (el) {
            return el === true;
        });

        var isComplete = stripeIsComplete || areAllComplete;
        var upgradeFormComplete = isComplete || !isUpdatingCard;
        if ((formType === 'upgrade' && upgradeFormComplete) || (
            (typeof additionalInformation.name != "undefined" &&
            (isComplete || selectedPlan == "") &&
            categories.length > 0 && valid_promo(additionalInformation.promo)
            && isValidEmailAddress($("#emailAddress").val())
        ))) {
            $(".js-stripe-token-error").hide();
            $("#checkout-modal").css("pointer-events", "none");
            $("#checkout-form").find(":submit").html('Processing...').prop('disabled', true);

            var requestCall = function (token) {
                var paymentToken = (typeof token != "undefined") ? token : "";
                var paymentRoute = (formType == 'upgrade') ? 'upgrade' : '';
                if (isUpdate) {
                    paymentRoute = 'billing'
                }
                var requestType = (formType == 'upgrade') ? 'PUT' : 'POST';
                $.ajax({
                    url: API_URL + `/payment/${paymentRoute}`,
                    type: requestType,
                    data: {
                        token: paymentToken,
                        category: categories.join(", "),
                        selected_plan: selectedPlan,
                        name: additionalInformation.name,
                        email_address: additionalInformation.email,
                        plan_amount: planAmount,
                        promo: additionalInformation.promo,
                        referrer: referralSource,
                        updateToken: isUpdatingCard ? 'true' : null,
                        referralCode: getUrlParameter('r') || '',
                        customerId: getUrlParameter('customerId') || '',
                    },
                    success: function (success) {
                        $("#checkout-modal").css("pointer-events", "");
                        $("#checkout-form").find(":submit").html('Submit').prop('disabled', false);
                        $('.right-card').addClass('complete-checkout');
                        $(".firstNameA").text(success.firstName)
                        $(".firstNameB").text(success.firstName)
                        $('input[name=refLink]').val(`${defaultUrl}?r=${success.referralCode}`);
                        if (formType == 'upgrade') {
                            $("#checkout-form").addClass("hide").siblings("#thanks-note-upgrade").removeClass("hide");
                        } else {
                            if ($('#upgrade-container').hasClass('purchase')) {
                                $("#modal-dialog").addClass('purchase-success');
                            } else {
                                $("#modal-dialog").addClass('free-success');
                            }
                        }
                        $("#checkout-form")[0].reset();
                        $("#checkout-form .cat_selector").removeClass("active");
                        $('#upgrade-container').removeClass('purchase');

                        categories = [];
                        elements[0].clear();
                        stripeIsComplete = false;
                        multipleElementComplete = [false, false, false];
                        if (selectedPlan == "")
                            selectedPlan = 'free';

                        dataLayer.push({
                          'event' : 'checkout',
                          'ecommerce': {
                            'checkout': {
                              'actionField': {
                                'option' : 'purchase',
                                'step' : 3,
                              },
                              'products': [{                            // List of productFieldObjects.
                                'name': selectedPlan,     // Name or ID is required.
                                'id': selectedPlan,
                                'price': planAmount,
                                'category': categories.join(", "),
                                'quantity': 1,
                                'coupon': additionalInformation.promo
                               },
                              ]
                            }
                          }
                        })
                        dataLayer.push({
                          'event' : 'purchase',
                          'ecommerce': {
                            'purchase': {
                              'actionField': {
                                'id': success.subscription_id,
                                'coupon': additionalInformation.promo,
                                'revenue' : planAmount
                              },
                              'products': [{                            // List of productFieldObjects.
                                'name': selectedPlan,     // Name or ID is required.
                                'id': selectedPlan,
                                'price': planAmount,
                                'category': categories.join(", "),
                                'quantity': 1,
                                'coupon': additionalInformation.promo
                               },
                              ]
                            }
                          }
                        })
                    },
                    error: function (error) {
                        /*
                        gtag('event', 'exception', {
                            'description': 'stripe_payment_failure',
                            'fatal': false   // set to true if the error is fatal
                        });
                        */
                        $("#checkout-modal").css("pointer-events", "");
                        $("#checkout-form").find(":submit").html('Submit').prop('disabled', false);
                        toastr.error(error.responseText)
                    }
                });
            }
            if (selectedPlan !== "" && isUpdatingCard) {
                stripe.createToken(elements[0], additionalInformation).then(function (result) {
                    if (result.token) {
                        requestCall(result.token);
                    } else {
                        /*
                        gtag('event', 'exception', {
                            'description': 'stripe_token_failure',
                            'fatal': false   // set to true if the error is fatal
                        });
                        */
                        $("#checkout-modal").css("pointer-events", "");
                        $("#checkout-form").find(":submit").html('Submit').prop('disabled', false);
                        $("#checkout-form").css("pointer-events", "");
                        $(".js-stripe-token-error").show();
                    }
                });
            } else {
                requestCall();
            }

        } else {
            if (categories.length == 0) {
                $("#cat-label").addClass("invalid-text")
            }

            if (isComplete == false) {
                $("#stripe-card").addClass("invalid");
                $("#card-number-element").addClass("invalid");
            }

            if (!valid_promo(additionalInformation.promo)) {
                $("#promo").addClass("invalid");
            }
        }
    });
}

function initStripe() {
    var elements = stripe.elements({
        locale: window.__exampleLocale,
        fonts: [
            {
                family: 'ProximaNova-Semibold',
                src: "url('" + API_URL + "/fonts/ProximaNova-Semibold.woff2')",
            },
        ]
    });
    var card = elements.create("card", {
        hidePostalCode: true,
        iconStyle: "solid",
        style: {
            base: {
                iconColor: "#abb5c1",
                color: "#383665",
                '::placeholder': {
                    color: '#abb5c1',
                    textTransform: "uppercase"
                },
                fontFamily: 'ProximaNova-Semibold',
                letterSpacing: '1.25px'
            },
            invalid: {
                iconColor: "#c0392b",
                color: "#c0392b"
            }
        },
    });
    card.on("focus", function () {
        $("#card-number label").addClass("valid-text");
    });
    card.on("blur", function () {
        $("#card-number label").removeClass("valid-text");
    });

    card.mount("#stripe-card");

    card.addEventListener('change', function(event) {
      console.log(event);
    });

    if (!isMobile || (isMobile && !isUpgrade)){
      registerElements([card]);
    }
}

function initStripeUpgrade() {

    var elements = stripe.elements({
        locale: window.__exampleLocale,
        fonts: [
            {
                family: 'ProximaNova-Semibold',
                src: "url('" + API_URL + "/fonts/ProximaNova-Semibold.woff2')",
            },
        ]
    });
    var style = {
        base: {
            display: 'block',
            iconColor: "#abb5c1",
            color: "#383665",
            '::placeholder': {
                color: '#abb5c1',
                textTransform: "uppercase"
            },
            fontFamily: 'ProximaNova-Semibold'
        },
        invalid: {
            iconColor: "#c0392b",
            color: "#c0392b"
        }
    };

    var cardNumberElement = elements.create('cardNumber', {
        hidePostalCode: true,
        style: style
      });
      cardNumberElement.mount('#card-number-element');

      var cardExpiryElement = elements.create('cardExpiry', {
        hidePostalCode: true,
        style: style
      });
      cardExpiryElement.mount('#card-expiry-element');

      var cardCvcElement = elements.create('cardCvc', {
        hidePostalCode: true,
        style: style
      });
      cardCvcElement.mount('#card-cvc-element');
      if (isUpgrade && isMobile){
        registerElements([cardNumberElement, cardExpiryElement, cardCvcElement]);
      }
}

function isValidEmailAddress(emailAddress) {
    var pattern = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
    return pattern.test(emailAddress);
};

//get url parameter
function getUrlParameter(sParam) {
    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
        sURLVariables = sPageURL.split("&"),
        sParameterName,
        i;

    for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split("=");

        if (sParameterName[0] === sParam) {
            return sParameterName[1] === undefined ? true : sParameterName[1];
        }
    }
};

function submitTailoredReport() {
    const keyword = $('#tailoredReportKeyword').val();
    const name = $('#tailoredReportName').val();
    const email = $('#tailoredReportEmail').val();

    // Reset error messages
    $('#tailoredReportSignUpErrorName').addClass('hide');
    $('#tailoredReportSignUpErrorEmail').addClass('hide');
    // Ensure we have at lease one character in the email
    if (name.length < 1) {
        $('#tailoredReportSignUpErrorName').removeClass('hide');
        return;
    }

    // Proper regex for an email
    var emailRegex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    // Ensure we have at least one character in the email
    if (email.length < 1 || !emailRegex.test(email.toLowerCase())) {
        $('#tailoredReportSignUpErrorEmail').removeClass('hide');
        return;
    }

    $.ajax({
        url: API_URL + '/api/user/leadGen/',
        type: 'POST',
        data: {
            name: name,
            email: email,
            keyword: keyword,
            categories: selectedTrends.join(", "),
        },
        success: function (success) {
            $('#tailoredReportCreationStepTwo').addClass('hide');
            $('#tailoredReportCreationStepThree').removeClass('hide');

            $('#tailoredReportCreationName').text(name);
        },
        error: function (error) {
            console.error(error.responseText)
        }
    })
}

$(document).on('click', '#submitTailoredReport', submitTailoredReport);

$(document).on('click', '#nextSectionForTailoredReport', function () {
    // Reset error messages
    $('#tailoredReportSignUpErrorTrendSelect').addClass('hide');
    $('#tailoredReportSignUpErrorTrendKeyword').addClass('hide');
    // Ensure we have at least one trend selected
    if (selectedTrends.length < 1) {
        $('#tailoredReportSignUpErrorTrendSelect').removeClass('hide');
        return;
    }
    // Ensure we have at least one character in the keyword
    if (!$('#tailoredReportKeyword').val() || $('#tailoredReportKeyword').val().length < 1) {
        $('#tailoredReportSignUpErrorTrendKeyword').removeClass('hide');
        return;
    }
    $('#tailoredReportCreationStepOne').addClass('hide');
    $('#tailoredReportCreationStepTwo').removeClass('hide');
});

$(document).on('click', '.btn-trend-type-select', function () {
    $(this).addClass('hide');
    var trendType = $(this).attr('data-value');
    selectedTrends.splice(selectedTrends.indexOf(trendType), 1);
});

/**
 * getCurrentRoute()
 *
 * Returns the current path of the user.
 */
function getCurrentRoute() {
    return window.location.href.split('?')[0];
}

/**
 * routeIsAtIndex()
 *
 * Determines if the user is currently at the index route.
 */
function routeIsAtIndex() {
    var currentRoute = getCurrentRoute();
    return currentRoute.indexOf('index') >= 0 || currentRoute === defaultUrl;
}

function convertCheckoutModalToUpgrade(update) {
    $("#modal-dialog").addClass('modal-lg')
    if (!update) {
        $("#fullnamegroup").addClass("hide")
        $("#submitbtn").html('see trends and subscribe<span class="glyphicon glyphicon-menu-right" aria-hidden="true" />');
    }
    $("#emailAddress").attr("readonly", "true");
    $("#fullname").attr("readonly", "true");
    $("#cat-note").addClass("hide")
    $("#cat-label").addClass("hide")
    $("#privacy-policy").addClass("hide")
    $("#checkout-selector").addClass("hide")
    $("#promo-section").addClass("hide")
    $("#upgrade-container").addClass("modal-upgrade")
    $("#upgrade-container").addClass("upgrade-wrapper")
    $("#carddetails").addClass("upgrade-card-details ")
    $("#modalclose").addClass("upgrade-modal-close")
    $("#upgradeformlogo").removeClass("hide");
    $("#billinginfo").removeClass("hide");
    $(".switch-group").removeClass("hide");
    $("#checkout-form").addClass("upgrade-form");
    if (isMobile) {
        $("#stripe-card").addClass('hide');
        $("#upgrade-stripe-card").removeClass('hide');
    }
    $("#fullname").prop('required',false);
    $("#checkout-form").attr("data-type", "upgrade");
    $("#checkout-modal").modal()
}

function convertUpgradeModalToCheckout() {
    $("#modal-dialog").addClass('hide')
    $("#modal-dialog").removeClass('modal-lg')
    $("#emailAddress").attr("readonly", "false");
    $("#cat-note").removeClass("hide")
    $("#cat-label").removeClass("hide")
    $("#privacy-policy").removeClass("hide")
    $("#checkout-selector").removeClass("hide")
    $("#promo-section").removeClass("hide")
    $("#fullnamegroup").removeClass("hide")
    $("#upgrade-container").removeClass("modal-upgrade")
    $("#upgrade-container").removeClass("upgrade-wrapper")
    $("#carddetails").removeClass("upgrade-card-details ")
    $("#modalclose").removeClass("upgrade-modal-close")
    $("#upgradeformlogo").addClass("hide");
    $("#billinginfo").addClass("hide");
    $(".switch-group").addClass("hide");
    $("#checkout-form").removeClass("upgrade-form");
    $("#submitbtn").html("submit");
    $("#emailAddress").val('')
    if (isMobile) {
        $("#stripe-card").removeClass('hide');
        $("#upgrade-stripe-card").addClass('hide');
    }
    initStripe();
    $("#checkout-form").attr("data-type", "checkout");
    $("#fullname").prop('required',true);
}



if($('.coupon-block').length) {
    (function() {
        var copyButton = document.querySelector('.coupon-block a');
        var copyInput = document.querySelector('.coupon-block input');
        copyButton.addEventListener('click', function(e) {
            e.preventDefault();
            var text = copyInput.select();
            $(".coupon-block a").addClass('active');
            document.execCommand('copy');
        });
        copyInput.addEventListener('click', function() {
            this.select();
        });
        })();
}


$(".pch-func").click(function () {
    $('#upgrade-container').addClass('purchase')
})

$(".coupon-block a").click(function () {
    $(this).text('Added to checkout')
})

if (window.location.search == "?ref=producthunt") {
    $('input[name=promo]').val('PH50');
    $('input[name=PHCODE]').val('PH50');
}

var getUrlParameter = function getUrlParameter(sParam) {
    var sPageURL = window.location.search.substring(1),
    sURLVariables = sPageURL.split('&'),
    sParameterName,
    i;

    for (i = 0; i < sURLVariables.length; i++) {
    sParameterName = sURLVariables[i].split('=');

    if (sParameterName[0] === sParam) {
        return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
    }
    }
};

$(".btn-unsubscribe").click(function () {
    var customerId = getUrlParameter('customerId');
    var trends = $("input[name='trends']:checked").val()
    var updates = $("input[name='updates']:checked").val()
    if (trends === 'on') {
        cancelAccount = true
    } else {
        cancelAccount = false
    }
    if (updates === 'on') {
        cancelMarketingSubscription = true
    } else {
        cancelMarketingSubscription = false
    }
    $.ajax({
        url: API_URL + '/api/user/cancel/',
        type: 'POST',
        data: {
            customerId: customerId,
            cancelAccount: cancelAccount,
            cancelMarketingSubscription: cancelMarketingSubscription
        },
        success: function(){
            $('.message-success').addClass('active')
            setTimeout(function(){
                $('.message-success').removeClass('active');
            },5000);
        },
        error: function (xhr) {
            $('.message-error').text(xhr.responseText)
          }
    })

})

new ClipboardJS('.btn-copy-link');
$('.btn-copy-link').on('click', function() {
  var $this = $(this);

  $this.text('Link copied!');
  setTimeout(function() {
    $this.text('Copy Link');
  }, 2000);
})

$('.js-menu-open').on('click', function() {
  $('.mobile-menu').addClass('show');
});

$('.js-menu-close, .mobile-menu a').on('click', function() {
  $('.mobile-menu').removeClass('show');
});

$('.js-enterprise-trigger').on('click', function() {
  $('.js-enterprise-trigger').hide();
  $('.js-enterprise-tagline').hide();
  $('.js-enterprise-list').hide();
  $('.js-enterprise-submit').show();
  $('.js-enterprise-fields').show();
});

$('#js-promo-trigger').on('click', function(e) {
  e.preventDefault();
  $('#promo-section').removeClass('hide');
  $('#promo-section').find('input').focus();
});

$('.js-toggle-card').on('click', function() {
  var $t1 = $('.testimonials--card-1');
  var $t2 = $('.testimonials--card-2');

  if ($t1.hasClass('active')) {
    $t1.removeClass('active').addClass('inactive');
  } else {
    $t1.removeClass('inactive').addClass('active');
  }
  if ($t2.hasClass('active')) {
    $t2.removeClass('active').addClass('inactive');
  } else {
    $t2.removeClass('inactive').addClass('active');
  }
})

function fadeInImage() {
  $('.image-fade-in').each(function() {
    if (!$(this).hasClass('fade-image')) {
      return;
    }

    var $this = $(this);
    var $window = $(window);
    var fadeInPoint = $window.scrollTop() + $window.height() - 100;
    var imageOffset = $this.offset().top;

    if (fadeInPoint > imageOffset) {
      $this.removeClass('fade-image');
    }
  });
};

$(window).on('scroll', function() {
  fadeInImage();
});
$(window).on('load', function() {
  fadeInImage();
});

$(".enterprise-form").on('submit', function (e) {
  e.preventDefault();

  const $form = $(this);
  const serializedData = $form.serialize();

  $.ajax({
      url: API_URL + '/api/contact/enterprise',
      type: 'POST',
      data: serializedData,
      success: function (success) {
        $('.js-enterprise-default').hide();
        $('.js-enterprise-success').show();
      },
      error: function (error) {
        $('.js-enterprise-error').show();
      }
  });
});

$('.btn-subscribe').on('click', function() {
  $('#modal-dialog').removeClass('free-success purchase-success upgrade-success');
});


function valid_promo(coupon) {
  if (coupon == "" || coupon == null) {
      return true
  }
  if (coupon in promo_cache) {
      return promo_cache[coupon]
  }

  function getRemote() {
    return $.ajax({
        url: API_URL + '/payment/promo',
        type: 'GET',
        data: {'promo' : coupon},
        contentType: "application/json; charset=utf-8",
        cache: true,
        async: false,
        success: function (success) {
          promo_cache[coupon] = true
        },
        error: function (error) {
          promo_cache[coupon] = false
        }
    })
  }
  result = getRemote().then( function (res) {
    if (res.statusCode == 200)
      return true
    if (res.statusCode == 400)
      return false
  })
  return result
}
